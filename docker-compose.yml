version: '3.7'

services:
  db:
    image: mariadb:10.3
    container_name: db
    env_file:
      - env/mysql.env
    restart: always
    ports:
      - 3306:3306
    volumes:
      - database_volume:/var/lib/mysql
    networks:
      - db_net

  pg:
    image: postgres:12-alpine
    container_name: pg
    env_file:
      - env/postgres.env
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - db_net

  proxy:
    build:
      context: ./nginx-proxy
    image: jwilder/nginx-proxy:alpine
    container_name: proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs
      - vhosts:/etc/nginx/vhost.d:ro
    networks:
      - proxy

  phpmyadmin:
    #build:
    #  context: ./phpmyadmin
    image: phpmyadmin/phpmyadmin:4.9
    container_name: phpmyadmin
    env_file:
      - env/phpmyadmin.env
    volumes:
      - sessions
    networks:
      - proxy
      - db_net
    depends_on:
      - db

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - env/pgadmin.env
    volumes:
      - pgadmin:/root/.pgadmin
    networks:
      - proxy
      - db_net
    restart: unless-stopped

  payara:
    build:
      context: ./payara
    image: payara:db
    container_name: payara
    env_file:
      - env/payara.env
    volumes:
      - app:/opt/payara/deployments
    networks:
      - proxy
      - db_net
    depends_on:
      - db
  
  passbolt:
    image: passbolt/passbolt:2.10.0-debian
    container_name: passbolt
    tty: true
    depends_on:
      - db
    env_file:
      - env/passbolt.env
    volumes:
      - gpg_volume:/var/www/passbolt/config/gpg
      - images_volume:/var/www/passbolt/webroot/img/public
    tmpfs:
      - /run
    command: ["/usr/bin/wait-for.sh", "db:3306", "--", "/docker-entrypoint.sh"]
    ports:
      - 8081:80
      - 4443:443
    networks:
      - db_net

networks:
  proxy:
  db_net:

volumes:
  database_volume:
  pgdata:
  pgadmin:
  gpg_volume:
  images_volume:
  sessions:
  certs:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/certs
      o: bind
  app:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/app/dist
      o: bind
  vhosts:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/vhost.d
      o: bind
