# Server globals
user                    nginx;
worker_processes        auto;
worker_rlimit_nofile    65535;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
daemon off;


# Worker config
events {
        worker_connections  1024;
        use                 epoll;
        multi_accept        on;
}

http {
     # Main settings
    sendfile                        on;
    tcp_nopush                      on;
    tcp_nodelay                     on;
    client_body_timeout             12;
    client_header_timeout           12;
    keepalive_timeout               15;
    send_timeout                    10;
    server_tokens                   off;

    client_body_buffer_size         512k;
    client_body_temp_path           /var/nginx/client_body_temp;
    client_header_buffer_size       16k;
    client_max_body_size            512M;
    large_client_header_buffers     4 8k;

    # Log format
    log_format  main    '$remote_addr - $remote_user [$time_local] $request '
                        '"$status" $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
    # access_log          /var/log/nginx/access.log main;
    access_log  off;

    types {
        text/html                             html htm shtml;
        text/css                              css;
        text/xml                              xml;
        image/gif                             gif;
        image/jpeg                            jpeg jpg;
        application/javascript                js;
        application/atom+xml                  atom;
        application/rss+xml                   rss;
    }
    default_type application/octet-stream;

    # Compression
    gzip                on;
    gzip_comp_level     2;
    gzip_min_length     1000;
    gzip_types          text/plain application/x-javascript text/xml text/css application/xml;
    gzip_proxied        expired no-cache no-store private auth;

    server {
        listen 80 default_server;
        server_name _;

        root /var/www/html;

        index index.php index.html index.htm;

        charset utf-8;

        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
          return 405;
        }

        location / {
          try_files $uri $uri/ =404;
        }

        location ~* .(jpg|jpeg|png|gif|ico|css|js)$ {
          access_log        off;
          log_not_found     off;
          expires           360d;
        }

        location ~ \.php$ {
          fastcgi_intercept_errors on;
          fastcgi_pass 127.0.0.1:9000;

          # regex to split $uri to $fastcgi_script_name and $fastcgi_path
          fastcgi_split_path_info ^(.+\.php)(/.+)$;

          # Check that the PHP script exists before passing it
          try_files $fastcgi_script_name =404;

          # Bypass the fact that try_files resets $fastcgi_path_info
          # see: https://trac.nginx.org/nginx/ticket/321
          set $path_info $fastcgi_path_info;
          fastcgi_param PATH_INFO $path_info;

          fastcgi_read_timeout 1200;
          fastcgi_buffering off;
          fastcgi_buffers 16 16k;
          fastcgi_buffer_size 32k;

          fastcgi_index index.php;

          fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
          fastcgi_param  QUERY_STRING       $query_string;
          fastcgi_param  REQUEST_METHOD     $request_method;
          fastcgi_param  CONTENT_TYPE       $content_type;
          fastcgi_param  CONTENT_LENGTH     $content_length;

          fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
          fastcgi_param  REQUEST_URI        $request_uri;
          fastcgi_param  DOCUMENT_URI       $document_uri;
          fastcgi_param  DOCUMENT_ROOT      $document_root;
          fastcgi_param  SERVER_PROTOCOL    $server_protocol;
          fastcgi_param  REQUEST_SCHEME     $scheme;
          fastcgi_param  HTTPS              $https if_not_empty;

          fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
          fastcgi_param  SERVER_SOFTWARE    nginx;

          fastcgi_param  REMOTE_ADDR        $remote_addr;
          fastcgi_param  REMOTE_PORT        $remote_port;
          fastcgi_param  SERVER_ADDR        $server_addr;
          fastcgi_param  SERVER_PORT        $server_port;
          fastcgi_param  SERVER_NAME        $server_name;

          # PHP only, required if PHP was built with --enable-force-cgi-redirect
          fastcgi_param  REDIRECT_STATUS    200;
        }

        location ~ /\. {
          access_log off;
          log_not_found off;
          deny all;
        }

        location ~ /(libraries|templates) {
          access_log off;
          log_not_found off;
          deny all;
        }

        # Deny static files
        location ~ ^/(README|LICENSE|ChangeLog|DCO)$ {
          deny all;
        }

        # Deny setup directories
        location ~ ^/(doc|sql|setup)/ {
          deny all;
        }

    }
}
